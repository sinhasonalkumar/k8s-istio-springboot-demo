apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    prometheus.io/path: "/actuator/prometheus"
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
    metrics.dynatrace.com/port: '8080'
    metrics.dynatrace.com/scrape: 'true'
    metrics.dynatrace.com/secure: 'true'
    metrics.dynatrace.com/path: '/actuator/prometheus'
  labels:
    app: demo-product-svc
  name: demo-product-svc
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: demo-product-svc
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: demo-product-svc
    spec:
      containers:
      - image: sinhasonalkumar/demo-product-svc:0.0.3
        imagePullPolicy: IfNotPresent
        name: demo-product-svc
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
